name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate Akash deploy file
      run: |
        cat > akash-deploy.yml << EOF
        version: "2.0"
        
        services:
          minebench-ui:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            expose:
              - port: 3000
                as: 80
                to:
                  - global: true
            env:
              - NODE_ENV=production
              - PORT=3000
              - HOSTNAME=0.0.0.0
            resources:
              cpu:
                units: 0.5
              memory:
                size: 512Mi
              storage:
                size: 1Gi
        
        profiles:
          compute:
            minebench-ui:
              resources:
                cpu:
                  units: 0.5
                memory:
                  size: 512Mi
                storage:
                  size: 1Gi
          placement:
            akash:
              pricing:
                minebench-ui:
                  denom: uakt
                  amount: 1000
        
        deployment:
          minebench-ui:
            akash:
              profile: minebench-ui
              count: 1
        EOF
        
        echo "Generated akash-deploy.yml with image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

    - name: Upload Akash deploy file
      uses: actions/upload-artifact@v4
      with:
        name: akash-deploy
        path: akash-deploy.yml
        retention-days: 30
